# -*- coding: utf-8 -*-
"""lstm-river.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ue5YduY873Um_aHCoDGaohrIgeo27XeW
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
from keras.models import Sequential
from keras.layers import LSTM, Dense, Dropout

file_path = 'santarem.xlsx'
df = pd.read_excel(file_path)

print(df.head())

df['Data'] = pd.to_datetime(df['Data'], format='%d/%m/%Y')
df['Chuva'] = df['Chuva'].apply(lambda x: str(x).replace(',', '.')).astype(float)

scaler = MinMaxScaler(feature_range=(0, 1))
df_scaled = scaler.fit_transform(df[['Cota_di√°ria', 'Chuva']])

timesteps = 3

def create_sequences(data, timesteps):
    X = []
    y = []
    for i in range(timesteps, len(data)):
        X.append(data[i-timesteps:i])
        y.append(data[i, 0])
    return np.array(X), np.array(y)

X, y = create_sequences(df_scaled, timesteps)
X = X.reshape((X.shape[0], X.shape[1], 2))

train_size = int(len(X) * 0.8)

X_train, X_test = X[:train_size], X[train_size:]
y_train, y_test = y[:train_size], y[train_size:]

model = Sequential()
model.add(LSTM(units=50, return_sequences=False, input_shape=(timesteps, 2)))
model.add(Dropout(0.2, seed=42))
model.add(Dense(20, activation='linear'))
model.add(Dense(1))

model.compile(optimizer='adam', loss='mean_squared_error')

model.fit(X_train, y_train, epochs=100, batch_size=1, verbose=2)

predicted_cota = model.predict(X_train)

predicted_cota = scaler.inverse_transform(np.concatenate((predicted_cota, np.zeros((predicted_cota.shape[0], 1))), axis=1))[:, 0]
y_test_real = scaler.inverse_transform(np.concatenate((y_train.reshape(-1, 1), np.zeros((y_train.shape[0], 1))), axis=1))[:, 0]

plt.figure(figsize=(10,6))
plt.plot(df['Data'][-len(y_train):], y_test_real, color='blue', label='Real')
plt.plot(df['Data'][-len(predicted_cota):], predicted_cota, color='red', linestyle='--', label='Estimated')
plt.xlabel('Data')
plt.ylabel('Water Level')
plt.title('Water Level Forecasting in Amazon Basin using LSTM')
plt.legend()
plt.show()